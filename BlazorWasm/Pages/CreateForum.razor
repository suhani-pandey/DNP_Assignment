@inject IForumService ForumService;
@* @page "/CreateForum" *@
@page "/CreateForum"
@using Domain
@using HttpClient.ClientInterface
@inject NavigationManager navMgr

<AuthorizeView>
    <Authorized>
        <div class="container-fluid  my-5 mx-5">
            <div class="card w-50 ">
                <div class="card-header h3  ">
                    Share your ideas..
                </div>
                <div class="title">
                    <label class="row mx-2 h5 my-3">Title:</label>
                    <input class="mx-2" type="text" @bind="ForumTitle" placeholder="write title here.."/>
                </div>
                <div class="body">
                    <label class="row mx-2 h5 my-2">Share your thoughts:</label>
                    <input class="body-input mx-2" @bind="Description"type="text" />
                </div>
                @if (!string.IsNullOrEmpty(msg))
                {
                    <label style="color: @color">@msg</label>
                }
                <div class="button-row mx-2 my-2">
                    <button @onclick="Create"  class="acceptbtn bg-gradient">Create</button>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="card mx-auto my-5">
            <div class="card-body">
                You need to login first!
            </div>
            <div class="card-footer button mx-5">
                <button class=" justify-content-center border-0" @onclick="GoToLogin">Login</button>
            </div>
            
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {

    private IEnumerable<Forum> forums;
    private string msg = "";
    private string ForumTitle = "";
    private string Description = "";
    private string color = "";

    private async Task Create()
    {
        msg = "";
        try
        {
            await ForumService.CreateForum(new Forum(ForumTitle,Description));
            ForumTitle = "";
            Description = "";
            msg = "Forum successfully created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private void GoToLogin()
    {
        navMgr.NavigateTo("/Login");
    }
}